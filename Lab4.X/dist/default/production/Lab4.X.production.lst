

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Oct 24 19:09:12 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213     0612                     __pidataBANK0:
   214                           
   215                           ;initializer for multiplexado@F1301
   216     0612  343F               	retlw	63
   217     0613  3400               	retlw	0
   218     0614  3406               	retlw	6
   219     0615  3400               	retlw	0
   220     0616  345B               	retlw	91
   221     0617  3400               	retlw	0
   222     0618  344F               	retlw	79
   223     0619  3400               	retlw	0
   224     061A  3466               	retlw	102
   225     061B  3400               	retlw	0
   226     061C  346D               	retlw	109
   227     061D  3400               	retlw	0
   228     061E  347D               	retlw	125
   229     061F  3400               	retlw	0
   230     0620  3407               	retlw	7
   231     0621  3400               	retlw	0
   232     0622  347F               	retlw	127
   233     0623  3400               	retlw	0
   234     0624  3467               	retlw	103
   235     0625  3400               	retlw	0
   236     0009                     _PORTE	set	9
   237     0007                     _PORTC	set	7
   238     0006                     _PORTB	set	6
   239     0009                     _PORTEbits	set	9
   240     001E                     _ADRESH	set	30
   241     001F                     _ADCON0bits	set	31
   242     0008                     _PORTD	set	8
   243     0006                     _PORTBbits	set	6
   244     0032                     _RB2	set	50
   245     0066                     _ADIF	set	102
   246     0031                     _RB1	set	49
   247     0030                     _RB0	set	48
   248     009F                     _ADCON1bits	set	159
   249     0085                     _TRISAbits	set	133
   250     008F                     _OSCCONbits	set	143
   251     0095                     _WPUBbits	set	149
   252     0081                     _OPTION_REGbits	set	129
   253     0089                     _TRISE	set	137
   254     0088                     _TRISD	set	136
   255     0087                     _TRISC	set	135
   256     0086                     _TRISB	set	134
   257     0188                     _ANSELbits	set	392
   258     0189                     _ANSELH	set	393
   259     0188                     _ANSEL	set	392
   260                           
   261                           	psect	cinit
   262     07EE                     start_initialization:	
   263                           ; #config settings
   264                           
   265     07EE                     __initialization:
   266                           
   267                           ; Initialize objects allocated to BANK0
   268     07EE  1383               	bcf	3,7	;select IRP bank0
   269     07EF  304E               	movlw	low (__pdataBANK0+20)
   270     07F0  00FD               	movwf	btemp+-1
   271     07F1  3006               	movlw	high __pidataBANK0
   272     07F2  00FE               	movwf	btemp
   273     07F3  3012               	movlw	low __pidataBANK0
   274     07F4  00FF               	movwf	btemp+1
   275     07F5  303A               	movlw	low __pdataBANK0
   276     07F6  0084               	movwf	4
   277     07F7  120A  118A  2603  120A  118A  	fcall	init_ram0
   278     07FC                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281     07FC                     __end_of__initialization:
   282     07FC  0183               	clrf	3
   283     07FD  120A  118A  2EB7   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	dataBANK0
   286     003A                     __pdataBANK0:
   287     003A                     multiplexado@F1301:
   288     003A                     	ds	20
   289                           
   290                           	psect	inittext
   291     05FF                     init_fetch0:	
   292                           ;	Called with low address in FSR and high address in W
   293                           
   294     05FF  087E               	movf	btemp,w
   295     0600  008A               	movwf	10
   296     0601  087F               	movf	btemp+1,w
   297     0602  0082               	movwf	2
   298     0603                     init_ram0:	
   299                           ;Called with:
   300                           ;	high address of idata address in btemp 
   301                           ;	low address of idata address in btemp+1 
   302                           ;	low address of data in FSR
   303                           ;	high address + 1 of data in btemp-1
   304                           
   305     0603  120A  118A  25FF  120A  118A  	fcall	init_fetch0
   306     0608  0080               	movwf	0
   307     0609  0A84               	incf	4,f
   308     060A  0804               	movf	4,w
   309     060B  067D               	xorwf	btemp+-1,w
   310     060C  1903               	btfsc	3,2
   311     060D  3400               	retlw	0
   312     060E  0AFF               	incf	btemp+1,f
   313     060F  1903               	btfsc	3,2
   314     0610  0AFE               	incf	btemp,f
   315     0611  2E03               	goto	init_ram0
   316                           
   317                           	psect	cstackCOMMON
   318     0070                     __pcstackCOMMON:
   319     0070                     ?_setup:
   320     0070                     ??_setup:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ?_setupADC:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ??_setupADC:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_multiplexado:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?_main:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ?___awdiv:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ?___awmod:	
   339                           ; 2 bytes @ 0x0
   340                           
   341     0070                     ___awdiv@divisor:	
   342                           ; 2 bytes @ 0x0
   343                           
   344     0070                     ___awmod@divisor:	
   345                           ; 2 bytes @ 0x0
   346                           
   347                           
   348                           ; 2 bytes @ 0x0
   349     0070                     	ds	2
   350     0072                     ___awdiv@dividend:
   351     0072                     ___awmod@dividend:	
   352                           ; 2 bytes @ 0x2
   353                           
   354                           
   355                           ; 2 bytes @ 0x2
   356     0072                     	ds	2
   357     0074                     ??___awdiv:
   358     0074                     ??___awmod:	
   359                           ; 1 bytes @ 0x4
   360                           
   361                           
   362                           ; 1 bytes @ 0x4
   363     0074                     	ds	1
   364     0075                     ___awdiv@counter:
   365     0075                     ___awmod@counter:	
   366                           ; 1 bytes @ 0x5
   367                           
   368                           
   369                           ; 1 bytes @ 0x5
   370     0075                     	ds	1
   371     0076                     ___awdiv@sign:
   372     0076                     ___awmod@sign:	
   373                           ; 1 bytes @ 0x6
   374                           
   375                           
   376                           ; 1 bytes @ 0x6
   377     0076                     	ds	1
   378     0077                     ___awdiv@quotient:
   379                           
   380                           ; 2 bytes @ 0x7
   381     0077                     	ds	2
   382     0079                     ??_multiplexado:
   383                           
   384                           ; 1 bytes @ 0x9
   385     0079                     	ds	4
   386                           
   387                           	psect	cstackBANK0
   388     0020                     __pcstackBANK0:
   389     0020                     multiplexado@numeros:
   390                           
   391                           ; 20 bytes @ 0x0
   392     0020                     	ds	20
   393     0034                     multiplexado@unidades:
   394                           
   395                           ; 2 bytes @ 0x14
   396     0034                     	ds	2
   397     0036                     multiplexado@decenas:
   398                           
   399                           ; 2 bytes @ 0x16
   400     0036                     	ds	2
   401     0038                     ??_main:
   402                           
   403                           ; 1 bytes @ 0x18
   404     0038                     	ds	2
   405                           
   406                           	psect	maintext
   407     06B7                     __pmaintext:	
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 53 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          0       2       0       0       0
   430 ;;      Totals:         0       2       0       0       0
   431 ;;Total ram usage:        2 bytes
   432 ;; Hardware stack levels required when called: 2
   433 ;; This function calls:
   434 ;;		_multiplexado
   435 ;;		_setup
   436 ;;		_setupADC
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442     06B7                     _main:	
   443                           ;psect for function _main
   444                           
   445     06B7                     l966:	
   446                           ;incstack = 0
   447                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   448                           
   449                           
   450                           ;main.c: 55:     setup();
   451     06B7  120A  118A  2641  120A  118A  	fcall	_setup
   452                           
   453                           ;main.c: 56:     setupADC();
   454     06BC  120A  118A  2626  120A  118A  	fcall	_setupADC
   455     06C1                     l968:
   456                           
   457                           ;main.c: 62:         if(!PORTBbits.RB0)
   458     06C1  1283               	bcf	3,5	;RP0=0, select bank0
   459     06C2  1303               	bcf	3,6	;RP1=0, select bank0
   460     06C3  1806               	btfsc	6,0	;volatile
   461     06C4  2EC6               	goto	u491
   462     06C5  2EC7               	goto	u490
   463     06C6                     u491:
   464     06C6  2ED7               	goto	l978
   465     06C7                     u490:
   466     06C7  2ECD               	goto	l974
   467     06C8                     l972:
   468     06C8  120A  118A  2784  120A  118A  	fcall	_multiplexado
   469     06CD                     l974:
   470     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   471     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   472     06CF  1C06               	btfss	6,0	;volatile
   473     06D0  2ED2               	goto	u501
   474     06D1  2ED3               	goto	u500
   475     06D2                     u501:
   476     06D2  2EC8               	goto	l972
   477     06D3                     u500:
   478     06D3                     l976:
   479                           
   480                           ;main.c: 65:             PORTD ++;
   481     06D3  3001               	movlw	1
   482     06D4  00B8               	movwf	??_main
   483     06D5  0838               	movf	??_main,w
   484     06D6  0788               	addwf	8,f	;volatile
   485     06D7                     l978:
   486                           
   487                           ;main.c: 67:         if(!PORTBbits.RB1)
   488     06D7  1886               	btfsc	6,1	;volatile
   489     06D8  2EDA               	goto	u511
   490     06D9  2EDB               	goto	u510
   491     06DA                     u511:
   492     06DA  2EE9               	goto	l988
   493     06DB                     u510:
   494     06DB  2EE1               	goto	l984
   495     06DC                     l982:
   496     06DC  120A  118A  2784  120A  118A  	fcall	_multiplexado
   497     06E1                     l984:
   498     06E1  1283               	bcf	3,5	;RP0=0, select bank0
   499     06E2  1303               	bcf	3,6	;RP1=0, select bank0
   500     06E3  1C86               	btfss	6,1	;volatile
   501     06E4  2EE6               	goto	u521
   502     06E5  2EE7               	goto	u520
   503     06E6                     u521:
   504     06E6  2EDC               	goto	l982
   505     06E7                     u520:
   506     06E7                     l986:
   507                           
   508                           ;main.c: 70:             PORTD --;
   509     06E7  3001               	movlw	1
   510     06E8  0288               	subwf	8,f	;volatile
   511     06E9                     l988:
   512                           
   513                           ;main.c: 75:         ADCON0bits.GO = 1;
   514     06E9  149F               	bsf	31,1	;volatile
   515     06EA                     l70:	
   516                           ;main.c: 76:         while (ADCON0bits.GO == 1){};
   517                           
   518     06EA  189F               	btfsc	31,1	;volatile
   519     06EB  2EED               	goto	u531
   520     06EC  2EEE               	goto	u530
   521     06ED                     u531:
   522     06ED  2EEA               	goto	l70
   523     06EE                     u530:
   524     06EE                     l72:
   525                           
   526                           ;main.c: 77:         ADIF = 0;
   527     06EE  130C               	bcf	12,6	;volatile
   528     06EF                     l990:
   529                           
   530                           ;main.c: 78:         multiplexado();
   531     06EF  120A  118A  2784  120A  118A  	fcall	_multiplexado
   532     06F4                     l992:
   533                           
   534                           ;main.c: 80:         _delay((unsigned long)((10)*(4000000/4000.0)));
   535     06F4  300D               	movlw	13
   536     06F5  1283               	bcf	3,5	;RP0=0, select bank0
   537     06F6  1303               	bcf	3,6	;RP1=0, select bank0
   538     06F7  00B9               	movwf	??_main+1
   539     06F8  30FB               	movlw	251
   540     06F9  00B8               	movwf	??_main
   541     06FA                     u577:
   542     06FA  0BB8               	decfsz	??_main,f
   543     06FB  2EFA               	goto	u577
   544     06FC  0BB9               	decfsz	??_main+1,f
   545     06FD  2EFA               	goto	u577
   546     06FE                     l994:
   547                           
   548                           ;main.c: 84:         if(!PORTBbits.RB2)
   549     06FE  1283               	bcf	3,5	;RP0=0, select bank0
   550     06FF  1303               	bcf	3,6	;RP1=0, select bank0
   551     0700  1906               	btfsc	6,2	;volatile
   552     0701  2F03               	goto	u541
   553     0702  2F04               	goto	u540
   554     0703                     u541:
   555     0703  2EC1               	goto	l968
   556     0704                     u540:
   557     0704  2F0A               	goto	l1000
   558     0705                     l998:
   559     0705  120A  118A  2784  120A  118A  	fcall	_multiplexado
   560     070A                     l1000:
   561     070A  1283               	bcf	3,5	;RP0=0, select bank0
   562     070B  1303               	bcf	3,6	;RP1=0, select bank0
   563     070C  1D06               	btfss	6,2	;volatile
   564     070D  2F0F               	goto	u551
   565     070E  2F10               	goto	u550
   566     070F                     u551:
   567     070F  2F05               	goto	l998
   568     0710                     u550:
   569     0710                     l1002:
   570                           
   571                           ;main.c: 88:             if(ADRESH > PORTD){
   572     0710  081E               	movf	30,w	;volatile
   573     0711  0208               	subwf	8,w	;volatile
   574     0712  1803               	skipnc
   575     0713  2F15               	goto	u561
   576     0714  2F16               	goto	u560
   577     0715                     u561:
   578     0715  2F18               	goto	l77
   579     0716                     u560:
   580     0716                     l1004:
   581                           
   582                           ;main.c: 89:                 PORTEbits.RE2 = 1;
   583     0716  1509               	bsf	9,2	;volatile
   584                           
   585                           ;main.c: 90:             }
   586     0717  2EC1               	goto	l968
   587     0718                     l77:	
   588                           ;main.c: 91:             else{
   589                           
   590                           
   591                           ;main.c: 92:                 PORTEbits.RE2 = 0;
   592     0718  1109               	bcf	9,2	;volatile
   593     0719  2EC1               	goto	l968
   594     071A  120A  118A  2800   	ljmp	start
   595     071D                     __end_of_main:
   596                           
   597                           	psect	text1
   598     0626                     __ptext1:	
   599 ;; *************** function _setupADC *****************
   600 ;; Defined at:
   601 ;;		line 136 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   615 ;;      Params:         0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0
   617 ;;      Temps:          1       0       0       0       0
   618 ;;      Totals:         1       0       0       0       0
   619 ;;Total ram usage:        1 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; This function calls:
   622 ;;		Nothing
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628     0626                     _setupADC:	
   629                           ;psect for function _setupADC
   630                           
   631     0626                     l796:	
   632                           ;incstack = 0
   633                           ; Regs used in _setupADC: [wreg]
   634                           
   635                           
   636                           ;main.c: 140:     TRISAbits.TRISA0 = 1;
   637     0626  1683               	bsf	3,5	;RP0=1, select bank1
   638     0627  1303               	bcf	3,6	;RP1=0, select bank1
   639     0628  1405               	bsf	5,0	;volatile
   640                           
   641                           ;main.c: 141:     ANSELbits.ANS0 = 1;
   642     0629  1683               	bsf	3,5	;RP0=1, select bank3
   643     062A  1703               	bsf	3,6	;RP1=1, select bank3
   644     062B  1408               	bsf	8,0	;volatile
   645                           
   646                           ;main.c: 145:     ADCON0bits.ADCS0 = 1;
   647     062C  1283               	bcf	3,5	;RP0=0, select bank0
   648     062D  1303               	bcf	3,6	;RP1=0, select bank0
   649     062E  171F               	bsf	31,6	;volatile
   650                           
   651                           ;main.c: 146:     ADCON0bits.ADCS1 = 0;
   652     062F  139F               	bcf	31,7	;volatile
   653                           
   654                           ;main.c: 148:     ADCON1bits.VCFG0 = 0;
   655     0630  1683               	bsf	3,5	;RP0=1, select bank1
   656     0631  1303               	bcf	3,6	;RP1=0, select bank1
   657     0632  121F               	bcf	31,4	;volatile
   658                           
   659                           ;main.c: 149:     ADCON1bits.VCFG1 = 0;
   660     0633  129F               	bcf	31,5	;volatile
   661                           
   662                           ;main.c: 151:     ADCON1bits.ADFM = 0;
   663     0634  139F               	bcf	31,7	;volatile
   664                           
   665                           ;main.c: 153:     ADCON0bits.CHS0 = 0;
   666     0635  1283               	bcf	3,5	;RP0=0, select bank0
   667     0636  1303               	bcf	3,6	;RP1=0, select bank0
   668     0637  111F               	bcf	31,2	;volatile
   669                           
   670                           ;main.c: 154:     ADCON0bits.CHS1 = 0;
   671     0638  119F               	bcf	31,3	;volatile
   672                           
   673                           ;main.c: 155:     ADCON0bits.CHS2 = 0;
   674     0639  121F               	bcf	31,4	;volatile
   675                           
   676                           ;main.c: 156:     ADCON0bits.CHS3 = 0;
   677     063A  129F               	bcf	31,5	;volatile
   678                           
   679                           ;main.c: 158:     ADCON0bits.ADON = 1;
   680     063B  141F               	bsf	31,0	;volatile
   681     063C                     l798:
   682                           
   683                           ;main.c: 160:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   684     063C  3021               	movlw	33
   685     063D  00F0               	movwf	??_setupADC
   686     063E                     u587:
   687     063E  0BF0               	decfsz	??_setupADC,f
   688     063F  2E3E               	goto	u587
   689     0640                     l87:
   690     0640  0008               	return
   691     0641                     __end_of_setupADC:
   692                           
   693                           	psect	text2
   694     0641                     __ptext2:	
   695 ;; *************** function _setup *****************
   696 ;; Defined at:
   697 ;;		line 102 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724     0641                     _setup:	
   725                           ;psect for function _setup
   726                           
   727     0641                     l766:	
   728                           ;incstack = 0
   729                           ; Regs used in _setup: [wreg+status,2+status,0]
   730                           
   731                           
   732                           ;main.c: 104:     ANSEL = 0;
   733     0641  1683               	bsf	3,5	;RP0=1, select bank3
   734     0642  1703               	bsf	3,6	;RP1=1, select bank3
   735     0643  0188               	clrf	8	;volatile
   736                           
   737                           ;main.c: 105:     ANSELH = 0;
   738     0644  0189               	clrf	9	;volatile
   739     0645                     l768:
   740                           
   741                           ;main.c: 107:     TRISB = 0b00000111;
   742     0645  3007               	movlw	7
   743     0646  1683               	bsf	3,5	;RP0=1, select bank1
   744     0647  1303               	bcf	3,6	;RP1=0, select bank1
   745     0648  0086               	movwf	6	;volatile
   746     0649                     l770:
   747                           
   748                           ;main.c: 108:     TRISC = 0;
   749     0649  0187               	clrf	7	;volatile
   750     064A                     l772:
   751                           
   752                           ;main.c: 109:     TRISD = 0;
   753     064A  0188               	clrf	8	;volatile
   754     064B                     l774:
   755                           
   756                           ;main.c: 110:     TRISE = 0;
   757     064B  0189               	clrf	9	;volatile
   758     064C                     l776:
   759                           
   760                           ;main.c: 112:     OPTION_REGbits.nRBPU = 0;
   761     064C  1381               	bcf	1,7	;volatile
   762     064D                     l778:
   763                           
   764                           ;main.c: 113:     WPUBbits.WPUB0 = 1;
   765     064D  1415               	bsf	21,0	;volatile
   766     064E                     l780:
   767                           
   768                           ;main.c: 114:     WPUBbits.WPUB1 = 1;
   769     064E  1495               	bsf	21,1	;volatile
   770     064F                     l782:
   771                           
   772                           ;main.c: 115:     WPUBbits.WPUB2 = 1;
   773     064F  1515               	bsf	21,2	;volatile
   774     0650                     l784:
   775                           
   776                           ;main.c: 117:     PORTB = 0;
   777     0650  1283               	bcf	3,5	;RP0=0, select bank0
   778     0651  1303               	bcf	3,6	;RP1=0, select bank0
   779     0652  0186               	clrf	6	;volatile
   780     0653                     l786:
   781                           
   782                           ;main.c: 118:     PORTC = 0;
   783     0653  0187               	clrf	7	;volatile
   784     0654                     l788:
   785                           
   786                           ;main.c: 119:     PORTD = 0;
   787     0654  0188               	clrf	8	;volatile
   788     0655                     l790:
   789                           
   790                           ;main.c: 120:     PORTE = 0;
   791     0655  0189               	clrf	9	;volatile
   792     0656                     l792:
   793                           
   794                           ;main.c: 124:     OSCCONbits.IRCF = 0b0110 ;
   795     0656  1683               	bsf	3,5	;RP0=1, select bank1
   796     0657  1303               	bcf	3,6	;RP1=0, select bank1
   797     0658  080F               	movf	15,w	;volatile
   798     0659  398F               	andlw	-113
   799     065A  3860               	iorlw	96
   800     065B  008F               	movwf	15	;volatile
   801     065C                     l794:
   802                           
   803                           ;main.c: 125:     OSCCONbits.SCS = 1;
   804     065C  140F               	bsf	15,0	;volatile
   805     065D                     l84:
   806     065D  0008               	return
   807     065E                     __end_of_setup:
   808                           
   809                           	psect	text3
   810     0784                     __ptext3:	
   811 ;; *************** function _multiplexado *****************
   812 ;; Defined at:
   813 ;;		line 163 in file "main.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  numeros        20    0[BANK0 ] int [10]
   818 ;;  decenas         2   22[BANK0 ] int 
   819 ;;  unidades        2   20[BANK0 ] int 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         0      24       0       0       0
   831 ;;      Temps:          4       0       0       0       0
   832 ;;      Totals:         4      24       0       0       0
   833 ;;Total ram usage:       28 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; Hardware stack levels required when called: 1
   836 ;; This function calls:
   837 ;;		___awdiv
   838 ;;		___awmod
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844     0784                     _multiplexado:	
   845                           ;psect for function _multiplexado
   846                           
   847     0784                     l944:	
   848                           ;incstack = 0
   849                           ; Regs used in _multiplexado: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   850                           
   851                           
   852                           ;main.c: 165:     int unidades;;main.c: 166:     int decenas;;main.c: 167:     int numer
      +                          os[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x67};
   853     0784  3020               	movlw	multiplexado@numeros& (0+255)
   854     0785  0084               	movwf	4
   855     0786  303A               	movlw	low multiplexado@F1301
   856     0787  00F9               	movwf	??_multiplexado
   857     0788  0804               	movf	4,w
   858     0789  00FA               	movwf	??_multiplexado+1
   859     078A  3014               	movlw	20
   860     078B  00FB               	movwf	??_multiplexado+2
   861     078C                     u480:
   862     078C  0879               	movf	??_multiplexado,w
   863     078D  0084               	movwf	4
   864     078E  1383               	bcf	3,7	;select IRP bank0
   865     078F  0800               	movf	0,w
   866     0790  00FC               	movwf	??_multiplexado+3
   867     0791  0AF9               	incf	??_multiplexado,f
   868     0792  087A               	movf	??_multiplexado+1,w
   869     0793  0084               	movwf	4
   870     0794  087C               	movf	??_multiplexado+3,w
   871     0795  0080               	movwf	0
   872     0796  0AFA               	incf	??_multiplexado+1,f
   873     0797  0BFB               	decfsz	??_multiplexado+2,f
   874     0798  2F8C               	goto	u480
   875     0799                     l946:
   876                           
   877                           ;main.c: 169:     unidades = ADRESH%10;
   878     0799  300A               	movlw	10
   879     079A  00F0               	movwf	___awmod@divisor
   880     079B  3000               	movlw	0
   881     079C  00F1               	movwf	___awmod@divisor+1
   882     079D  1283               	bcf	3,5	;RP0=0, select bank0
   883     079E  1303               	bcf	3,6	;RP1=0, select bank0
   884     079F  081E               	movf	30,w	;volatile
   885     07A0  00F9               	movwf	??_multiplexado
   886     07A1  01FA               	clrf	??_multiplexado+1
   887     07A2  0879               	movf	??_multiplexado,w
   888     07A3  00F2               	movwf	___awmod@dividend
   889     07A4  087A               	movf	??_multiplexado+1,w
   890     07A5  00F3               	movwf	___awmod@dividend+1
   891     07A6  120A  118A  265E  120A  118A  	fcall	___awmod
   892     07AB  0871               	movf	?___awmod+1,w
   893     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   894     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   895     07AE  00B5               	movwf	multiplexado@unidades+1
   896     07AF  0870               	movf	?___awmod,w
   897     07B0  00B4               	movwf	multiplexado@unidades
   898     07B1                     l948:
   899                           
   900                           ;main.c: 170:     decenas = ADRESH/10;
   901     07B1  300A               	movlw	10
   902     07B2  00F0               	movwf	___awdiv@divisor
   903     07B3  3000               	movlw	0
   904     07B4  00F1               	movwf	___awdiv@divisor+1
   905     07B5  081E               	movf	30,w	;volatile
   906     07B6  00F9               	movwf	??_multiplexado
   907     07B7  01FA               	clrf	??_multiplexado+1
   908     07B8  0879               	movf	??_multiplexado,w
   909     07B9  00F2               	movwf	___awdiv@dividend
   910     07BA  087A               	movf	??_multiplexado+1,w
   911     07BB  00F3               	movwf	___awdiv@dividend+1
   912     07BC  120A  118A  271D  120A  118A  	fcall	___awdiv
   913     07C1  0871               	movf	?___awdiv+1,w
   914     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   915     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   916     07C4  00B7               	movwf	multiplexado@decenas+1
   917     07C5  0870               	movf	?___awdiv,w
   918     07C6  00B6               	movwf	multiplexado@decenas
   919     07C7                     l950:
   920                           
   921                           ;main.c: 172:     PORTC = numeros[unidades];
   922     07C7  0834               	movf	multiplexado@unidades,w
   923     07C8  00F9               	movwf	??_multiplexado
   924     07C9  0779               	addwf	??_multiplexado,w
   925     07CA  3E20               	addlw	(low (multiplexado@numeros| 0))& (0+255)
   926     07CB  0084               	movwf	4
   927     07CC  1383               	bcf	3,7	;select IRP bank0
   928     07CD  0800               	movf	0,w
   929     07CE  0087               	movwf	7	;volatile
   930     07CF                     l952:
   931                           
   932                           ;main.c: 173:     PORTEbits.RE0 = 1;
   933     07CF  1409               	bsf	9,0	;volatile
   934     07D0                     l954:
   935                           
   936                           ;main.c: 174:     _delay((unsigned long)((1)*(4000000/4000.0)));
   937     07D0  30C7               	movlw	199
   938     07D1  00F9               	movwf	??_multiplexado
   939     07D2                     u597:
   940     07D2  2FD3               	nop2
   941     07D3  0BF9               	decfsz	??_multiplexado,f
   942     07D4  2FD2               	goto	u597
   943     07D5  2FD6               	nop2
   944     07D6  2FD7               	nop2
   945     07D7                     l956:
   946                           
   947                           ;main.c: 175:     PORTEbits.RE0 = 0;
   948     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   949     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   950     07D9  1009               	bcf	9,0	;volatile
   951     07DA                     l958:
   952                           
   953                           ;main.c: 177:     PORTC = numeros[decenas];
   954     07DA  0836               	movf	multiplexado@decenas,w
   955     07DB  00F9               	movwf	??_multiplexado
   956     07DC  0779               	addwf	??_multiplexado,w
   957     07DD  3E20               	addlw	(low (multiplexado@numeros| 0))& (0+255)
   958     07DE  0084               	movwf	4
   959     07DF  1383               	bcf	3,7	;select IRP bank0
   960     07E0  0800               	movf	0,w
   961     07E1  0087               	movwf	7	;volatile
   962     07E2                     l960:
   963                           
   964                           ;main.c: 178:     PORTEbits.RE1 = 1;
   965     07E2  1489               	bsf	9,1	;volatile
   966     07E3                     l962:
   967                           
   968                           ;main.c: 179:     _delay((unsigned long)((1)*(4000000/4000.0)));
   969     07E3  30C7               	movlw	199
   970     07E4  00F9               	movwf	??_multiplexado
   971     07E5                     u607:
   972     07E5  2FE6               	nop2
   973     07E6  0BF9               	decfsz	??_multiplexado,f
   974     07E7  2FE5               	goto	u607
   975     07E8  2FE9               	nop2
   976     07E9  2FEA               	nop2
   977     07EA                     l964:
   978                           
   979                           ;main.c: 180:     PORTEbits.RE1 = 0;
   980     07EA  1283               	bcf	3,5	;RP0=0, select bank0
   981     07EB  1303               	bcf	3,6	;RP1=0, select bank0
   982     07EC  1089               	bcf	9,1	;volatile
   983     07ED                     l92:
   984     07ED  0008               	return
   985     07EE                     __end_of_multiplexado:
   986                           
   987                           	psect	text4
   988     065E                     __ptext4:	
   989 ;; *************** function ___awmod *****************
   990 ;; Defined at:
   991 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  divisor         2    0[COMMON] int 
   994 ;;  dividend        2    2[COMMON] int 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  sign            1    6[COMMON] unsigned char 
   997 ;;  counter         1    5[COMMON] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  2    0[COMMON] int 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1007 ;;      Params:         4       0       0       0       0
  1008 ;;      Locals:         2       0       0       0       0
  1009 ;;      Temps:          1       0       0       0       0
  1010 ;;      Totals:         7       0       0       0       0
  1011 ;;Total ram usage:        7 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; This function calls:
  1014 ;;		Nothing
  1015 ;; This function is called by:
  1016 ;;		_multiplexado
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020     065E                     ___awmod:	
  1021                           ;psect for function ___awmod
  1022                           
  1023     065E                     l906:	
  1024                           ;incstack = 0
  1025                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1026                           
  1027     065E  01F6               	clrf	___awmod@sign
  1028     065F                     l908:
  1029     065F  1FF3               	btfss	___awmod@dividend+1,7
  1030     0660  2E62               	goto	u391
  1031     0661  2E63               	goto	u390
  1032     0662                     u391:
  1033     0662  2E6A               	goto	l914
  1034     0663                     u390:
  1035     0663                     l910:
  1036     0663  09F2               	comf	___awmod@dividend,f
  1037     0664  09F3               	comf	___awmod@dividend+1,f
  1038     0665  0AF2               	incf	___awmod@dividend,f
  1039     0666  1903               	skipnz
  1040     0667  0AF3               	incf	___awmod@dividend+1,f
  1041     0668                     l912:
  1042     0668  01F6               	clrf	___awmod@sign
  1043     0669  0AF6               	incf	___awmod@sign,f
  1044     066A                     l914:
  1045     066A  1FF1               	btfss	___awmod@divisor+1,7
  1046     066B  2E6D               	goto	u401
  1047     066C  2E6E               	goto	u400
  1048     066D                     u401:
  1049     066D  2E73               	goto	l918
  1050     066E                     u400:
  1051     066E                     l916:
  1052     066E  09F0               	comf	___awmod@divisor,f
  1053     066F  09F1               	comf	___awmod@divisor+1,f
  1054     0670  0AF0               	incf	___awmod@divisor,f
  1055     0671  1903               	skipnz
  1056     0672  0AF1               	incf	___awmod@divisor+1,f
  1057     0673                     l918:
  1058     0673  0870               	movf	___awmod@divisor,w
  1059     0674  0471               	iorwf	___awmod@divisor+1,w
  1060     0675  1903               	btfsc	3,2
  1061     0676  2E78               	goto	u411
  1062     0677  2E79               	goto	u410
  1063     0678                     u411:
  1064     0678  2EA8               	goto	l936
  1065     0679                     u410:
  1066     0679                     l920:
  1067     0679  01F5               	clrf	___awmod@counter
  1068     067A  0AF5               	incf	___awmod@counter,f
  1069     067B  2E87               	goto	l926
  1070     067C                     l922:
  1071     067C  3001               	movlw	1
  1072     067D                     u425:
  1073     067D  1003               	clrc
  1074     067E  0DF0               	rlf	___awmod@divisor,f
  1075     067F  0DF1               	rlf	___awmod@divisor+1,f
  1076     0680  3EFF               	addlw	-1
  1077     0681  1D03               	skipz
  1078     0682  2E7D               	goto	u425
  1079     0683                     l924:
  1080     0683  3001               	movlw	1
  1081     0684  00F4               	movwf	??___awmod
  1082     0685  0874               	movf	??___awmod,w
  1083     0686  07F5               	addwf	___awmod@counter,f
  1084     0687                     l926:
  1085     0687  1FF1               	btfss	___awmod@divisor+1,7
  1086     0688  2E8A               	goto	u431
  1087     0689  2E8B               	goto	u430
  1088     068A                     u431:
  1089     068A  2E7C               	goto	l922
  1090     068B                     u430:
  1091     068B                     l928:
  1092     068B  0871               	movf	___awmod@divisor+1,w
  1093     068C  0273               	subwf	___awmod@dividend+1,w
  1094     068D  1D03               	skipz
  1095     068E  2E91               	goto	u445
  1096     068F  0870               	movf	___awmod@divisor,w
  1097     0690  0272               	subwf	___awmod@dividend,w
  1098     0691                     u445:
  1099     0691  1C03               	skipc
  1100     0692  2E94               	goto	u441
  1101     0693  2E95               	goto	u440
  1102     0694                     u441:
  1103     0694  2E9B               	goto	l932
  1104     0695                     u440:
  1105     0695                     l930:
  1106     0695  0870               	movf	___awmod@divisor,w
  1107     0696  02F2               	subwf	___awmod@dividend,f
  1108     0697  0871               	movf	___awmod@divisor+1,w
  1109     0698  1C03               	skipc
  1110     0699  03F3               	decf	___awmod@dividend+1,f
  1111     069A  02F3               	subwf	___awmod@dividend+1,f
  1112     069B                     l932:
  1113     069B  3001               	movlw	1
  1114     069C                     u455:
  1115     069C  1003               	clrc
  1116     069D  0CF1               	rrf	___awmod@divisor+1,f
  1117     069E  0CF0               	rrf	___awmod@divisor,f
  1118     069F  3EFF               	addlw	-1
  1119     06A0  1D03               	skipz
  1120     06A1  2E9C               	goto	u455
  1121     06A2                     l934:
  1122     06A2  3001               	movlw	1
  1123     06A3  02F5               	subwf	___awmod@counter,f
  1124     06A4  1D03               	btfss	3,2
  1125     06A5  2EA7               	goto	u461
  1126     06A6  2EA8               	goto	u460
  1127     06A7                     u461:
  1128     06A7  2E8B               	goto	l928
  1129     06A8                     u460:
  1130     06A8                     l936:
  1131     06A8  0876               	movf	___awmod@sign,w
  1132     06A9  1903               	btfsc	3,2
  1133     06AA  2EAC               	goto	u471
  1134     06AB  2EAD               	goto	u470
  1135     06AC                     u471:
  1136     06AC  2EB2               	goto	l940
  1137     06AD                     u470:
  1138     06AD                     l938:
  1139     06AD  09F2               	comf	___awmod@dividend,f
  1140     06AE  09F3               	comf	___awmod@dividend+1,f
  1141     06AF  0AF2               	incf	___awmod@dividend,f
  1142     06B0  1903               	skipnz
  1143     06B1  0AF3               	incf	___awmod@dividend+1,f
  1144     06B2                     l940:
  1145     06B2  0873               	movf	___awmod@dividend+1,w
  1146     06B3  00F1               	movwf	?___awmod+1
  1147     06B4  0872               	movf	___awmod@dividend,w
  1148     06B5  00F0               	movwf	?___awmod
  1149     06B6                     l344:
  1150     06B6  0008               	return
  1151     06B7                     __end_of___awmod:
  1152                           
  1153                           	psect	text5
  1154     071D                     __ptext5:	
  1155 ;; *************** function ___awdiv *****************
  1156 ;; Defined at:
  1157 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  divisor         2    0[COMMON] int 
  1160 ;;  dividend        2    2[COMMON] int 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  quotient        2    7[COMMON] int 
  1163 ;;  sign            1    6[COMMON] unsigned char 
  1164 ;;  counter         1    5[COMMON] unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  2    0[COMMON] int 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         4       0       0       0       0
  1175 ;;      Locals:         4       0       0       0       0
  1176 ;;      Temps:          1       0       0       0       0
  1177 ;;      Totals:         9       0       0       0       0
  1178 ;;Total ram usage:        9 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_multiplexado
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187     071D                     ___awdiv:	
  1188                           ;psect for function ___awdiv
  1189                           
  1190     071D                     l862:	
  1191                           ;incstack = 0
  1192                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1193                           
  1194     071D  01F6               	clrf	___awdiv@sign
  1195     071E                     l864:
  1196     071E  1FF1               	btfss	___awdiv@divisor+1,7
  1197     071F  2F21               	goto	u291
  1198     0720  2F22               	goto	u290
  1199     0721                     u291:
  1200     0721  2F29               	goto	l870
  1201     0722                     u290:
  1202     0722                     l866:
  1203     0722  09F0               	comf	___awdiv@divisor,f
  1204     0723  09F1               	comf	___awdiv@divisor+1,f
  1205     0724  0AF0               	incf	___awdiv@divisor,f
  1206     0725  1903               	skipnz
  1207     0726  0AF1               	incf	___awdiv@divisor+1,f
  1208     0727                     l868:
  1209     0727  01F6               	clrf	___awdiv@sign
  1210     0728  0AF6               	incf	___awdiv@sign,f
  1211     0729                     l870:
  1212     0729  1FF3               	btfss	___awdiv@dividend+1,7
  1213     072A  2F2C               	goto	u301
  1214     072B  2F2D               	goto	u300
  1215     072C                     u301:
  1216     072C  2F36               	goto	l876
  1217     072D                     u300:
  1218     072D                     l872:
  1219     072D  09F2               	comf	___awdiv@dividend,f
  1220     072E  09F3               	comf	___awdiv@dividend+1,f
  1221     072F  0AF2               	incf	___awdiv@dividend,f
  1222     0730  1903               	skipnz
  1223     0731  0AF3               	incf	___awdiv@dividend+1,f
  1224     0732                     l874:
  1225     0732  3001               	movlw	1
  1226     0733  00F4               	movwf	??___awdiv
  1227     0734  0874               	movf	??___awdiv,w
  1228     0735  06F6               	xorwf	___awdiv@sign,f
  1229     0736                     l876:
  1230     0736  01F7               	clrf	___awdiv@quotient
  1231     0737  01F8               	clrf	___awdiv@quotient+1
  1232     0738                     l878:
  1233     0738  0870               	movf	___awdiv@divisor,w
  1234     0739  0471               	iorwf	___awdiv@divisor+1,w
  1235     073A  1903               	btfsc	3,2
  1236     073B  2F3D               	goto	u311
  1237     073C  2F3E               	goto	u310
  1238     073D                     u311:
  1239     073D  2F75               	goto	l898
  1240     073E                     u310:
  1241     073E                     l880:
  1242     073E  01F5               	clrf	___awdiv@counter
  1243     073F  0AF5               	incf	___awdiv@counter,f
  1244     0740  2F4C               	goto	l886
  1245     0741                     l882:
  1246     0741  3001               	movlw	1
  1247     0742                     u325:
  1248     0742  1003               	clrc
  1249     0743  0DF0               	rlf	___awdiv@divisor,f
  1250     0744  0DF1               	rlf	___awdiv@divisor+1,f
  1251     0745  3EFF               	addlw	-1
  1252     0746  1D03               	skipz
  1253     0747  2F42               	goto	u325
  1254     0748                     l884:
  1255     0748  3001               	movlw	1
  1256     0749  00F4               	movwf	??___awdiv
  1257     074A  0874               	movf	??___awdiv,w
  1258     074B  07F5               	addwf	___awdiv@counter,f
  1259     074C                     l886:
  1260     074C  1FF1               	btfss	___awdiv@divisor+1,7
  1261     074D  2F4F               	goto	u331
  1262     074E  2F50               	goto	u330
  1263     074F                     u331:
  1264     074F  2F41               	goto	l882
  1265     0750                     u330:
  1266     0750                     l888:
  1267     0750  3001               	movlw	1
  1268     0751                     u345:
  1269     0751  1003               	clrc
  1270     0752  0DF7               	rlf	___awdiv@quotient,f
  1271     0753  0DF8               	rlf	___awdiv@quotient+1,f
  1272     0754  3EFF               	addlw	-1
  1273     0755  1D03               	skipz
  1274     0756  2F51               	goto	u345
  1275     0757  0871               	movf	___awdiv@divisor+1,w
  1276     0758  0273               	subwf	___awdiv@dividend+1,w
  1277     0759  1D03               	skipz
  1278     075A  2F5D               	goto	u355
  1279     075B  0870               	movf	___awdiv@divisor,w
  1280     075C  0272               	subwf	___awdiv@dividend,w
  1281     075D                     u355:
  1282     075D  1C03               	skipc
  1283     075E  2F60               	goto	u351
  1284     075F  2F61               	goto	u350
  1285     0760                     u351:
  1286     0760  2F68               	goto	l894
  1287     0761                     u350:
  1288     0761                     l890:
  1289     0761  0870               	movf	___awdiv@divisor,w
  1290     0762  02F2               	subwf	___awdiv@dividend,f
  1291     0763  0871               	movf	___awdiv@divisor+1,w
  1292     0764  1C03               	skipc
  1293     0765  03F3               	decf	___awdiv@dividend+1,f
  1294     0766  02F3               	subwf	___awdiv@dividend+1,f
  1295     0767                     l892:
  1296     0767  1477               	bsf	___awdiv@quotient,0
  1297     0768                     l894:
  1298     0768  3001               	movlw	1
  1299     0769                     u365:
  1300     0769  1003               	clrc
  1301     076A  0CF1               	rrf	___awdiv@divisor+1,f
  1302     076B  0CF0               	rrf	___awdiv@divisor,f
  1303     076C  3EFF               	addlw	-1
  1304     076D  1D03               	skipz
  1305     076E  2F69               	goto	u365
  1306     076F                     l896:
  1307     076F  3001               	movlw	1
  1308     0770  02F5               	subwf	___awdiv@counter,f
  1309     0771  1D03               	btfss	3,2
  1310     0772  2F74               	goto	u371
  1311     0773  2F75               	goto	u370
  1312     0774                     u371:
  1313     0774  2F50               	goto	l888
  1314     0775                     u370:
  1315     0775                     l898:
  1316     0775  0876               	movf	___awdiv@sign,w
  1317     0776  1903               	btfsc	3,2
  1318     0777  2F79               	goto	u381
  1319     0778  2F7A               	goto	u380
  1320     0779                     u381:
  1321     0779  2F7F               	goto	l902
  1322     077A                     u380:
  1323     077A                     l900:
  1324     077A  09F7               	comf	___awdiv@quotient,f
  1325     077B  09F8               	comf	___awdiv@quotient+1,f
  1326     077C  0AF7               	incf	___awdiv@quotient,f
  1327     077D  1903               	skipnz
  1328     077E  0AF8               	incf	___awdiv@quotient+1,f
  1329     077F                     l902:
  1330     077F  0878               	movf	___awdiv@quotient+1,w
  1331     0780  00F1               	movwf	?___awdiv+1
  1332     0781  0877               	movf	___awdiv@quotient,w
  1333     0782  00F0               	movwf	?___awdiv
  1334     0783                     l331:
  1335     0783  0008               	return
  1336     0784                     __end_of___awdiv:
  1337     007E                     btemp	set	126	;btemp
  1338     007E                     wtemp0	set	126
  1339                           
  1340                           	psect	idloc
  1341                           
  1342                           ;Config register IDLOC0 @ 0x2000
  1343                           ;	unspecified, using default values
  1344     2000                     	org	8192
  1345     2000  3FFF               	dw	16383
  1346                           
  1347                           ;Config register IDLOC1 @ 0x2001
  1348                           ;	unspecified, using default values
  1349     2001                     	org	8193
  1350     2001  3FFF               	dw	16383
  1351                           
  1352                           ;Config register IDLOC2 @ 0x2002
  1353                           ;	unspecified, using default values
  1354     2002                     	org	8194
  1355     2002  3FFF               	dw	16383
  1356                           
  1357                           ;Config register IDLOC3 @ 0x2003
  1358                           ;	unspecified, using default values
  1359     2003                     	org	8195
  1360     2003  3FFF               	dw	16383
  1361                           
  1362                           	psect	config
  1363                           
  1364                           ;Config register CONFIG1 @ 0x2007
  1365                           ;	Oscillator Selection bits
  1366                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1367                           ;	Watchdog Timer Enable bit
  1368                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1369                           ;	Power-up Timer Enable bit
  1370                           ;	PWRTE = OFF, PWRT disabled
  1371                           ;	RE3/MCLR pin function select bit
  1372                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1373                           ;	Code Protection bit
  1374                           ;	CP = OFF, Program memory code protection is disabled
  1375                           ;	Data Code Protection bit
  1376                           ;	CPD = OFF, Data memory code protection is disabled
  1377                           ;	Brown Out Reset Selection bits
  1378                           ;	BOREN = OFF, BOR disabled
  1379                           ;	Internal External Switchover bit
  1380                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1381                           ;	Fail-Safe Clock Monitor Enabled bit
  1382                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1383                           ;	Low Voltage Programming Enable bit
  1384                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1385                           ;	In-Circuit Debugger Mode bit
  1386                           ;	DEBUG = 0x1, unprogramme  1387     2007                     	org	8199
  1388     2007  20D4               	dw	8404
  1389                           
  1390                           ;Config register CONFIG2 @ 0x2008
  1391                           ;	Brown-out Reset Selection bit
  1392                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1393                           ;	Flash Program Memory Self Write Enable bits
  1394                           ;	WRT = OFF, Write protection off
  1395     2008                     	org	8200
  1396     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     26      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_multiplexado
    _multiplexado->___awdiv

Critical Paths under _main in BANK0

    _main->_multiplexado

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     993
                                             24 BANK0      2     2      0
                       _multiplexado
                              _setup
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _multiplexado                                        28    28      0     993
                                              9 COMMON     4     4      0
                                              0 BANK0     24    24      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _multiplexado
     ___awdiv
     ___awmod
   _setup
   _setupADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Oct 24 19:09:12 2022

                      pc 0002                       l70 06EA                       l72 06EE  
                     l92 07ED                       l84 065D                       l77 0718  
                     l87 0640             ___awdiv@sign 0076                       fsr 0004  
                    l331 0783                      l344 06B6                      l900 077A  
                    l902 077F                      l910 0663                      l920 0679  
                    l912 0668                      l930 0695                      l922 067C  
                    l914 066A                      l906 065E                      l770 0649  
                    l940 06B2                      l932 069B                      l924 0683  
                    l916 066E                      l908 065F                      l780 064E  
                    l772 064A                      l870 0729                      l862 071D  
                    l934 06A2                      l926 0687                      l918 0673  
                    l950 07C7                      l790 0655                      l782 064F  
                    l774 064B                      l766 0641                      l880 073E  
                    l872 072D                      l864 071E                      l928 068B  
                    l936 06A8                      l960 07E2                      l952 07CF  
                    l944 0784                      l792 0656                      l784 0650  
                    l776 064C                      l768 0645                      l890 0761  
                    l882 0741                      l874 0732                      l866 0722  
                    l938 06AD                      l962 07E3                      l954 07D0  
                    l946 0799                      l794 065C                      l786 0653  
                    l778 064D                      l892 0767                      l884 0748  
                    l876 0736                      l868 0727                      l964 07EA  
                    l956 07D7                      l948 07B1                      l788 0654  
                    l796 0626                      l972 06C8                      l894 0768  
                    l886 074C                      l878 0738                      l958 07DA  
                    l798 063C                      l990 06EF                      l982 06DC  
                    l974 06CD                      l966 06B7                      l896 076F  
                    l888 0750                      l992 06F4                      l984 06E1  
                    l976 06D3                      l968 06C1                      l898 0775  
                    l994 06FE                      l986 06E7                      l978 06D7  
                    l988 06E9                      l998 0705                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      u300 072D  
                    u301 072C                      u310 073E                      u311 073D  
                    u400 066E                      u401 066D                      u330 0750  
                    u410 0679                      u331 074F                      u411 0678  
                    u500 06D3                      u325 0742                      u501 06D2  
                    u350 0761                      u430 068B                      u510 06DB  
                    u351 0760                      u431 068A                      u511 06DA  
                    u440 0695                      u520 06E7                      u345 0751  
                    u441 0694                      u425 067D                      u521 06E6  
                    u370 0775                      u290 0722                      u530 06EE  
                    u371 0774                      u355 075D                      u291 0721  
                    u531 06ED                      u380 077A                      u460 06A8  
                    u540 0704                      u381 0779                      u365 0769  
                    u461 06A7                      u445 0691                      u541 0703  
                    u470 06AD                      u390 0663                      u550 0710  
                    u471 06AC                      u455 069C                      u391 0662  
                    u607 07E5                      u551 070F                      u480 078C  
                    u560 0716                      u561 0715                      u490 06C7  
                    u491 06C6                      u577 06FA                      u587 063E  
                    u597 07D2                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076                     l1000 070A                     l1002 0710  
                   l1004 0716                     _ADIF 0066                     _main 06B7  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awdiv 0784          __end_of___awmod 06B7                    _ANSEL 0188  
        ___awdiv@divisor 0070          ___awdiv@counter 0075                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0641                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 071D                   ??_main 0038                   _ADRESH 001E  
       ___awdiv@dividend 0072                   ?_setup 0070                   _ANSELH 0189  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075         __end_of_setupADC 0641  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0612  
          __end_of_setup 065E           _OPTION_REGbits 0081                  ??_setup 0070  
             __pmaintext 06B7                ?_setupADC 0070                  ___awdiv 071D  
                ___awmod 065E                _ANSELbits 0188                  __ptext1 0626  
                __ptext2 0641                  __ptext3 0784                  __ptext4 065E  
                __ptext5 071D         ___awmod@dividend 0072      multiplexado@decenas 0036  
   end_of_initialization 07FC      multiplexado@numeros 0020               ??_setupADC 0070  
              _PORTBbits 0006                _PORTEbits 0009            ?_multiplexado 0070  
              _TRISAbits 0085           ??_multiplexado 0079      start_initialization 07EE  
             init_fetch0 05FF              __pdataBANK0 003A                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0070  
   __end_of_multiplexado 07EE               _ADCON0bits 001F               _ADCON1bits 009F  
               _WPUBbits 0095        multiplexado@F1301 003A                 _setupADC 0626  
               init_ram0 0603     multiplexado@unidades 0034               _OSCCONbits 008F  
           _multiplexado 0784  
