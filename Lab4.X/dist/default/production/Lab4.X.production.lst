

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 16 21:06:34 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213     062A                     __pidataBANK0:
   214                           
   215                           ;initializer for multiplexado@F1301
   216     062A  343F               	retlw	63
   217     062B  3400               	retlw	0
   218     062C  3406               	retlw	6
   219     062D  3400               	retlw	0
   220     062E  345B               	retlw	91
   221     062F  3400               	retlw	0
   222     0630  344F               	retlw	79
   223     0631  3400               	retlw	0
   224     0632  3466               	retlw	102
   225     0633  3400               	retlw	0
   226     0634  346D               	retlw	109
   227     0635  3400               	retlw	0
   228     0636  347D               	retlw	125
   229     0637  3400               	retlw	0
   230     0638  3407               	retlw	7
   231     0639  3400               	retlw	0
   232     063A  347F               	retlw	127
   233     063B  3400               	retlw	0
   234     063C  3467               	retlw	103
   235     063D  3400               	retlw	0
   236     0009                     _PORTE	set	9
   237     0007                     _PORTC	set	7
   238     0006                     _PORTB	set	6
   239     0009                     _PORTEbits	set	9
   240     001E                     _ADRESH	set	30
   241     001F                     _ADCON0bits	set	31
   242     0008                     _PORTD	set	8
   243     0006                     _PORTBbits	set	6
   244     0032                     _RB2	set	50
   245     0066                     _ADIF	set	102
   246     0031                     _RB1	set	49
   247     0030                     _RB0	set	48
   248     009F                     _ADCON1bits	set	159
   249     0085                     _TRISAbits	set	133
   250     008F                     _OSCCONbits	set	143
   251     0095                     _WPUBbits	set	149
   252     0081                     _OPTION_REGbits	set	129
   253     0089                     _TRISE	set	137
   254     0088                     _TRISD	set	136
   255     0087                     _TRISC	set	135
   256     0086                     _TRISB	set	134
   257     0188                     _ANSELbits	set	392
   258     0189                     _ANSELH	set	393
   259     0188                     _ANSEL	set	392
   260                           
   261                           	psect	cinit
   262     07EE                     start_initialization:	
   263                           ; #config settings
   264                           
   265     07EE                     __initialization:
   266                           
   267                           ; Initialize objects allocated to BANK0
   268     07EE  1383               	bcf	3,7	;select IRP bank0
   269     07EF  304E               	movlw	low (__pdataBANK0+20)
   270     07F0  00FD               	movwf	btemp+-1
   271     07F1  3006               	movlw	high __pidataBANK0
   272     07F2  00FE               	movwf	btemp
   273     07F3  302A               	movlw	low __pidataBANK0
   274     07F4  00FF               	movwf	btemp+1
   275     07F5  303A               	movlw	low __pdataBANK0
   276     07F6  0084               	movwf	4
   277     07F7  120A  118A  261B  120A  118A  	fcall	init_ram0
   278     07FC                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281     07FC                     __end_of__initialization:
   282     07FC  0183               	clrf	3
   283     07FD  120A  118A  2E76   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	dataBANK0
   286     003A                     __pdataBANK0:
   287     003A                     multiplexado@F1301:
   288     003A                     	ds	20
   289                           
   290                           	psect	inittext
   291     0617                     init_fetch0:	
   292                           ;	Called with low address in FSR and high address in W
   293                           
   294     0617  087E               	movf	btemp,w
   295     0618  008A               	movwf	10
   296     0619  087F               	movf	btemp+1,w
   297     061A  0082               	movwf	2
   298     061B                     init_ram0:	
   299                           ;Called with:
   300                           ;	high address of idata address in btemp 
   301                           ;	low address of idata address in btemp+1 
   302                           ;	low address of data in FSR
   303                           ;	high address + 1 of data in btemp-1
   304                           
   305     061B  120A  118A  2617  120A  118A  	fcall	init_fetch0
   306     0620  0080               	movwf	0
   307     0621  0A84               	incf	4,f
   308     0622  0804               	movf	4,w
   309     0623  067D               	xorwf	btemp+-1,w
   310     0624  1903               	btfsc	3,2
   311     0625  3400               	retlw	0
   312     0626  0AFF               	incf	btemp+1,f
   313     0627  1903               	btfsc	3,2
   314     0628  0AFE               	incf	btemp,f
   315     0629  2E1B               	goto	init_ram0
   316                           
   317                           	psect	cstackCOMMON
   318     0070                     __pcstackCOMMON:
   319     0070                     ?_setup:
   320     0070                     ??_setup:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ?_setupADC:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ??_setupADC:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_multiplexado:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?_main:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ?___awdiv:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ?___awmod:	
   339                           ; 2 bytes @ 0x0
   340                           
   341     0070                     ___awdiv@divisor:	
   342                           ; 2 bytes @ 0x0
   343                           
   344     0070                     ___awmod@divisor:	
   345                           ; 2 bytes @ 0x0
   346                           
   347                           
   348                           ; 2 bytes @ 0x0
   349     0070                     	ds	2
   350     0072                     ___awdiv@dividend:
   351     0072                     ___awmod@dividend:	
   352                           ; 2 bytes @ 0x2
   353                           
   354                           
   355                           ; 2 bytes @ 0x2
   356     0072                     	ds	2
   357     0074                     ??___awdiv:
   358     0074                     ??___awmod:	
   359                           ; 1 bytes @ 0x4
   360                           
   361                           
   362                           ; 1 bytes @ 0x4
   363     0074                     	ds	1
   364     0075                     ___awdiv@counter:
   365     0075                     ___awmod@counter:	
   366                           ; 1 bytes @ 0x5
   367                           
   368                           
   369                           ; 1 bytes @ 0x5
   370     0075                     	ds	1
   371     0076                     ___awdiv@sign:
   372     0076                     ___awmod@sign:	
   373                           ; 1 bytes @ 0x6
   374                           
   375                           
   376                           ; 1 bytes @ 0x6
   377     0076                     	ds	1
   378     0077                     ___awdiv@quotient:
   379                           
   380                           ; 2 bytes @ 0x7
   381     0077                     	ds	2
   382     0079                     ??_multiplexado:
   383                           
   384                           ; 1 bytes @ 0x9
   385     0079                     	ds	4
   386                           
   387                           	psect	cstackBANK0
   388     0020                     __pcstackBANK0:
   389     0020                     multiplexado@numeros:
   390                           
   391                           ; 20 bytes @ 0x0
   392     0020                     	ds	20
   393     0034                     multiplexado@unidades:
   394                           
   395                           ; 2 bytes @ 0x14
   396     0034                     	ds	2
   397     0036                     multiplexado@decenas:
   398                           
   399                           ; 2 bytes @ 0x16
   400     0036                     	ds	2
   401     0038                     ??_main:
   402                           
   403                           ; 1 bytes @ 0x18
   404     0038                     	ds	2
   405                           
   406                           	psect	maintext
   407     0676                     __pmaintext:	
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 53 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          0       2       0       0       0
   430 ;;      Totals:         0       2       0       0       0
   431 ;;Total ram usage:        2 bytes
   432 ;; Hardware stack levels required when called: 2
   433 ;; This function calls:
   434 ;;		_multiplexado
   435 ;;		_setup
   436 ;;		_setupADC
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442     0676                     _main:	
   443                           ;psect for function _main
   444                           
   445     0676                     l954:	
   446                           ;incstack = 0
   447                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   448                           
   449                           
   450                           ;main.c: 55:     setup();
   451     0676  120A  118A  2659  120A  118A  	fcall	_setup
   452                           
   453                           ;main.c: 56:     setupADC();
   454     067B  120A  118A  263E  120A  118A  	fcall	_setupADC
   455     0680                     l956:
   456                           
   457                           ;main.c: 62:         if(!PORTBbits.RB0)
   458     0680  1283               	bcf	3,5	;RP0=0, select bank0
   459     0681  1303               	bcf	3,6	;RP1=0, select bank0
   460     0682  1806               	btfsc	6,0	;volatile
   461     0683  2E85               	goto	u491
   462     0684  2E86               	goto	u490
   463     0685                     u491:
   464     0685  2E8E               	goto	l962
   465     0686                     u490:
   466     0686                     l63:
   467     0686  1C06               	btfss	6,0	;volatile
   468     0687  2E89               	goto	u501
   469     0688  2E8A               	goto	u500
   470     0689                     u501:
   471     0689  2E86               	goto	l63
   472     068A                     u500:
   473     068A                     l960:
   474                           
   475                           ;main.c: 65:             PORTD ++;
   476     068A  3001               	movlw	1
   477     068B  00B8               	movwf	??_main
   478     068C  0838               	movf	??_main,w
   479     068D  0788               	addwf	8,f	;volatile
   480     068E                     l962:
   481                           
   482                           ;main.c: 67:         if(!PORTBbits.RB1)
   483     068E  1886               	btfsc	6,1	;volatile
   484     068F  2E91               	goto	u511
   485     0690  2E92               	goto	u510
   486     0691                     u511:
   487     0691  2E98               	goto	l968
   488     0692                     u510:
   489     0692                     l67:
   490     0692  1C86               	btfss	6,1	;volatile
   491     0693  2E95               	goto	u521
   492     0694  2E96               	goto	u520
   493     0695                     u521:
   494     0695  2E92               	goto	l67
   495     0696                     u520:
   496     0696                     l966:
   497                           
   498                           ;main.c: 70:             PORTD --;
   499     0696  3001               	movlw	1
   500     0697  0288               	subwf	8,f	;volatile
   501     0698                     l968:
   502                           
   503                           ;main.c: 75:         ADCON0bits.GO = 1;
   504     0698  149F               	bsf	31,1	;volatile
   505     0699                     l70:	
   506                           ;main.c: 76:         while (ADCON0bits.GO == 1){};
   507                           
   508     0699  189F               	btfsc	31,1	;volatile
   509     069A  2E9C               	goto	u531
   510     069B  2E9D               	goto	u530
   511     069C                     u531:
   512     069C  2E99               	goto	l70
   513     069D                     u530:
   514     069D                     l72:
   515                           
   516                           ;main.c: 77:         ADIF = 0;
   517     069D  130C               	bcf	12,6	;volatile
   518     069E                     l970:
   519                           
   520                           ;main.c: 78:         multiplexado();
   521     069E  120A  118A  2784  120A  118A  	fcall	_multiplexado
   522     06A3                     l972:
   523                           
   524                           ;main.c: 80:         _delay((unsigned long)((10)*(4000000/4000.0)));
   525     06A3  300D               	movlw	13
   526     06A4  1283               	bcf	3,5	;RP0=0, select bank0
   527     06A5  1303               	bcf	3,6	;RP1=0, select bank0
   528     06A6  00B9               	movwf	??_main+1
   529     06A7  30FB               	movlw	251
   530     06A8  00B8               	movwf	??_main
   531     06A9                     u577:
   532     06A9  0BB8               	decfsz	??_main,f
   533     06AA  2EA9               	goto	u577
   534     06AB  0BB9               	decfsz	??_main+1,f
   535     06AC  2EA9               	goto	u577
   536     06AD                     l974:
   537                           
   538                           ;main.c: 84:         if(!PORTBbits.RB2)
   539     06AD  1283               	bcf	3,5	;RP0=0, select bank0
   540     06AE  1303               	bcf	3,6	;RP1=0, select bank0
   541     06AF  1906               	btfsc	6,2	;volatile
   542     06B0  2EB2               	goto	u541
   543     06B1  2EB3               	goto	u540
   544     06B2                     u541:
   545     06B2  2E80               	goto	l956
   546     06B3                     u540:
   547     06B3                     l74:
   548     06B3  1D06               	btfss	6,2	;volatile
   549     06B4  2EB6               	goto	u551
   550     06B5  2EB7               	goto	u550
   551     06B6                     u551:
   552     06B6  2EB3               	goto	l74
   553     06B7                     u550:
   554     06B7                     l978:
   555                           
   556                           ;main.c: 88:             if(ADRESH > PORTD){
   557     06B7  081E               	movf	30,w	;volatile
   558     06B8  0208               	subwf	8,w	;volatile
   559     06B9  1803               	skipnc
   560     06BA  2EBC               	goto	u561
   561     06BB  2EBD               	goto	u560
   562     06BC                     u561:
   563     06BC  2EBF               	goto	l77
   564     06BD                     u560:
   565     06BD                     l980:
   566                           
   567                           ;main.c: 89:                 PORTEbits.RE2 = 1;
   568     06BD  1509               	bsf	9,2	;volatile
   569                           
   570                           ;main.c: 90:             }
   571     06BE  2E80               	goto	l956
   572     06BF                     l77:	
   573                           ;main.c: 91:             else{
   574                           
   575                           
   576                           ;main.c: 92:                 PORTEbits.RE2 = 0;
   577     06BF  1109               	bcf	9,2	;volatile
   578     06C0  2E80               	goto	l956
   579     06C1  120A  118A  2800   	ljmp	start
   580     06C4                     __end_of_main:
   581                           
   582                           	psect	text1
   583     063E                     __ptext1:	
   584 ;; *************** function _setupADC *****************
   585 ;; Defined at:
   586 ;;		line 138 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          1       0       0       0       0
   603 ;;      Totals:         1       0       0       0       0
   604 ;;Total ram usage:        1 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613     063E                     _setupADC:	
   614                           ;psect for function _setupADC
   615                           
   616     063E                     l796:	
   617                           ;incstack = 0
   618                           ; Regs used in _setupADC: [wreg]
   619                           
   620                           
   621                           ;main.c: 142:     TRISAbits.TRISA0 = 1;
   622     063E  1683               	bsf	3,5	;RP0=1, select bank1
   623     063F  1303               	bcf	3,6	;RP1=0, select bank1
   624     0640  1405               	bsf	5,0	;volatile
   625                           
   626                           ;main.c: 143:     ANSELbits.ANS0 = 1;
   627     0641  1683               	bsf	3,5	;RP0=1, select bank3
   628     0642  1703               	bsf	3,6	;RP1=1, select bank3
   629     0643  1408               	bsf	8,0	;volatile
   630                           
   631                           ;main.c: 147:     ADCON0bits.ADCS0 = 1;
   632     0644  1283               	bcf	3,5	;RP0=0, select bank0
   633     0645  1303               	bcf	3,6	;RP1=0, select bank0
   634     0646  171F               	bsf	31,6	;volatile
   635                           
   636                           ;main.c: 148:     ADCON0bits.ADCS1 = 0;
   637     0647  139F               	bcf	31,7	;volatile
   638                           
   639                           ;main.c: 150:     ADCON1bits.VCFG0 = 0;
   640     0648  1683               	bsf	3,5	;RP0=1, select bank1
   641     0649  1303               	bcf	3,6	;RP1=0, select bank1
   642     064A  121F               	bcf	31,4	;volatile
   643                           
   644                           ;main.c: 151:     ADCON1bits.VCFG1 = 0;
   645     064B  129F               	bcf	31,5	;volatile
   646                           
   647                           ;main.c: 153:     ADCON1bits.ADFM = 0;
   648     064C  139F               	bcf	31,7	;volatile
   649                           
   650                           ;main.c: 155:     ADCON0bits.CHS0 = 0;
   651     064D  1283               	bcf	3,5	;RP0=0, select bank0
   652     064E  1303               	bcf	3,6	;RP1=0, select bank0
   653     064F  111F               	bcf	31,2	;volatile
   654                           
   655                           ;main.c: 156:     ADCON0bits.CHS1 = 0;
   656     0650  119F               	bcf	31,3	;volatile
   657                           
   658                           ;main.c: 157:     ADCON0bits.CHS2 = 0;
   659     0651  121F               	bcf	31,4	;volatile
   660                           
   661                           ;main.c: 158:     ADCON0bits.CHS3 = 0;
   662     0652  129F               	bcf	31,5	;volatile
   663                           
   664                           ;main.c: 160:     ADCON0bits.ADON = 1;
   665     0653  141F               	bsf	31,0	;volatile
   666     0654                     l798:
   667                           
   668                           ;main.c: 162:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   669     0654  3021               	movlw	33
   670     0655  00F0               	movwf	??_setupADC
   671     0656                     u587:
   672     0656  0BF0               	decfsz	??_setupADC,f
   673     0657  2E56               	goto	u587
   674     0658                     l87:
   675     0658  0008               	return
   676     0659                     __end_of_setupADC:
   677                           
   678                           	psect	text2
   679     0659                     __ptext2:	
   680 ;; *************** function _setup *****************
   681 ;; Defined at:
   682 ;;		line 102 in file "main.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709     0659                     _setup:	
   710                           ;psect for function _setup
   711                           
   712     0659                     l766:	
   713                           ;incstack = 0
   714                           ; Regs used in _setup: [wreg+status,2+status,0]
   715                           
   716                           
   717                           ;main.c: 104:     ANSEL = 0;
   718     0659  1683               	bsf	3,5	;RP0=1, select bank3
   719     065A  1703               	bsf	3,6	;RP1=1, select bank3
   720     065B  0188               	clrf	8	;volatile
   721                           
   722                           ;main.c: 105:     ANSELH = 0;
   723     065C  0189               	clrf	9	;volatile
   724     065D                     l768:
   725                           
   726                           ;main.c: 107:     TRISB = 0b00000111;
   727     065D  3007               	movlw	7
   728     065E  1683               	bsf	3,5	;RP0=1, select bank1
   729     065F  1303               	bcf	3,6	;RP1=0, select bank1
   730     0660  0086               	movwf	6	;volatile
   731     0661                     l770:
   732                           
   733                           ;main.c: 108:     TRISC = 0;
   734     0661  0187               	clrf	7	;volatile
   735     0662                     l772:
   736                           
   737                           ;main.c: 109:     TRISD = 0;
   738     0662  0188               	clrf	8	;volatile
   739     0663                     l774:
   740                           
   741                           ;main.c: 110:     TRISE = 0;
   742     0663  0189               	clrf	9	;volatile
   743     0664                     l776:
   744                           
   745                           ;main.c: 112:     OPTION_REGbits.nRBPU = 0;
   746     0664  1381               	bcf	1,7	;volatile
   747     0665                     l778:
   748                           
   749                           ;main.c: 113:     WPUBbits.WPUB0 = 1;
   750     0665  1415               	bsf	21,0	;volatile
   751     0666                     l780:
   752                           
   753                           ;main.c: 114:     WPUBbits.WPUB1 = 1;
   754     0666  1495               	bsf	21,1	;volatile
   755     0667                     l782:
   756                           
   757                           ;main.c: 115:     WPUBbits.WPUB2 = 1;
   758     0667  1515               	bsf	21,2	;volatile
   759     0668                     l784:
   760                           
   761                           ;main.c: 117:     PORTB = 0;
   762     0668  1283               	bcf	3,5	;RP0=0, select bank0
   763     0669  1303               	bcf	3,6	;RP1=0, select bank0
   764     066A  0186               	clrf	6	;volatile
   765     066B                     l786:
   766                           
   767                           ;main.c: 118:     PORTC = 0;
   768     066B  0187               	clrf	7	;volatile
   769     066C                     l788:
   770                           
   771                           ;main.c: 119:     PORTD = 0;
   772     066C  0188               	clrf	8	;volatile
   773     066D                     l790:
   774                           
   775                           ;main.c: 120:     PORTE = 0;
   776     066D  0189               	clrf	9	;volatile
   777     066E                     l792:
   778                           
   779                           ;main.c: 124:     OSCCONbits.IRCF = 0b0110 ;
   780     066E  1683               	bsf	3,5	;RP0=1, select bank1
   781     066F  1303               	bcf	3,6	;RP1=0, select bank1
   782     0670  080F               	movf	15,w	;volatile
   783     0671  398F               	andlw	-113
   784     0672  3860               	iorlw	96
   785     0673  008F               	movwf	15	;volatile
   786     0674                     l794:
   787                           
   788                           ;main.c: 125:     OSCCONbits.SCS = 1;
   789     0674  140F               	bsf	15,0	;volatile
   790     0675                     l84:
   791     0675  0008               	return
   792     0676                     __end_of_setup:
   793                           
   794                           	psect	text3
   795     0784                     __ptext3:	
   796 ;; *************** function _multiplexado *****************
   797 ;; Defined at:
   798 ;;		line 165 in file "main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  numeros        20    0[BANK0 ] int [10]
   803 ;;  decenas         2   22[BANK0 ] int 
   804 ;;  unidades        2   20[BANK0 ] int 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         0       0       0       0       0
   815 ;;      Locals:         0      24       0       0       0
   816 ;;      Temps:          4       0       0       0       0
   817 ;;      Totals:         4      24       0       0       0
   818 ;;Total ram usage:       28 bytes
   819 ;; Hardware stack levels used: 1
   820 ;; Hardware stack levels required when called: 1
   821 ;; This function calls:
   822 ;;		___awdiv
   823 ;;		___awmod
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829     0784                     _multiplexado:	
   830                           ;psect for function _multiplexado
   831                           
   832     0784                     l932:	
   833                           ;incstack = 0
   834                           ; Regs used in _multiplexado: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   835                           
   836                           
   837                           ;main.c: 167:     int unidades;;main.c: 168:     int decenas;;main.c: 169:     int numer
      +                          os[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x67};
   838     0784  3020               	movlw	multiplexado@numeros& (0+255)
   839     0785  0084               	movwf	4
   840     0786  303A               	movlw	low multiplexado@F1301
   841     0787  00F9               	movwf	??_multiplexado
   842     0788  0804               	movf	4,w
   843     0789  00FA               	movwf	??_multiplexado+1
   844     078A  3014               	movlw	20
   845     078B  00FB               	movwf	??_multiplexado+2
   846     078C                     u480:
   847     078C  0879               	movf	??_multiplexado,w
   848     078D  0084               	movwf	4
   849     078E  1383               	bcf	3,7	;select IRP bank0
   850     078F  0800               	movf	0,w
   851     0790  00FC               	movwf	??_multiplexado+3
   852     0791  0AF9               	incf	??_multiplexado,f
   853     0792  087A               	movf	??_multiplexado+1,w
   854     0793  0084               	movwf	4
   855     0794  087C               	movf	??_multiplexado+3,w
   856     0795  0080               	movwf	0
   857     0796  0AFA               	incf	??_multiplexado+1,f
   858     0797  0BFB               	decfsz	??_multiplexado+2,f
   859     0798  2F8C               	goto	u480
   860     0799                     l934:
   861                           
   862                           ;main.c: 171:     unidades = ADRESH%10;
   863     0799  300A               	movlw	10
   864     079A  00F0               	movwf	___awmod@divisor
   865     079B  3000               	movlw	0
   866     079C  00F1               	movwf	___awmod@divisor+1
   867     079D  1283               	bcf	3,5	;RP0=0, select bank0
   868     079E  1303               	bcf	3,6	;RP1=0, select bank0
   869     079F  081E               	movf	30,w	;volatile
   870     07A0  00F9               	movwf	??_multiplexado
   871     07A1  01FA               	clrf	??_multiplexado+1
   872     07A2  0879               	movf	??_multiplexado,w
   873     07A3  00F2               	movwf	___awmod@dividend
   874     07A4  087A               	movf	??_multiplexado+1,w
   875     07A5  00F3               	movwf	___awmod@dividend+1
   876     07A6  120A  118A  26C4  120A  118A  	fcall	___awmod
   877     07AB  0871               	movf	?___awmod+1,w
   878     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   879     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   880     07AE  00B5               	movwf	multiplexado@unidades+1
   881     07AF  0870               	movf	?___awmod,w
   882     07B0  00B4               	movwf	multiplexado@unidades
   883     07B1                     l936:
   884                           
   885                           ;main.c: 172:     decenas = ADRESH/10;
   886     07B1  300A               	movlw	10
   887     07B2  00F0               	movwf	___awdiv@divisor
   888     07B3  3000               	movlw	0
   889     07B4  00F1               	movwf	___awdiv@divisor+1
   890     07B5  081E               	movf	30,w	;volatile
   891     07B6  00F9               	movwf	??_multiplexado
   892     07B7  01FA               	clrf	??_multiplexado+1
   893     07B8  0879               	movf	??_multiplexado,w
   894     07B9  00F2               	movwf	___awdiv@dividend
   895     07BA  087A               	movf	??_multiplexado+1,w
   896     07BB  00F3               	movwf	___awdiv@dividend+1
   897     07BC  120A  118A  271D  120A  118A  	fcall	___awdiv
   898     07C1  0871               	movf	?___awdiv+1,w
   899     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   900     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   901     07C4  00B7               	movwf	multiplexado@decenas+1
   902     07C5  0870               	movf	?___awdiv,w
   903     07C6  00B6               	movwf	multiplexado@decenas
   904     07C7                     l938:
   905                           
   906                           ;main.c: 174:     PORTC = numeros[unidades];
   907     07C7  0834               	movf	multiplexado@unidades,w
   908     07C8  00F9               	movwf	??_multiplexado
   909     07C9  0779               	addwf	??_multiplexado,w
   910     07CA  3E20               	addlw	(low (multiplexado@numeros| 0))& (0+255)
   911     07CB  0084               	movwf	4
   912     07CC  1383               	bcf	3,7	;select IRP bank0
   913     07CD  0800               	movf	0,w
   914     07CE  0087               	movwf	7	;volatile
   915     07CF                     l940:
   916                           
   917                           ;main.c: 175:     PORTEbits.RE0 = 1;
   918     07CF  1409               	bsf	9,0	;volatile
   919     07D0                     l942:
   920                           
   921                           ;main.c: 176:     _delay((unsigned long)((1)*(4000000/4000.0)));
   922     07D0  30C7               	movlw	199
   923     07D1  00F9               	movwf	??_multiplexado
   924     07D2                     u597:
   925     07D2  2FD3               	nop2
   926     07D3  0BF9               	decfsz	??_multiplexado,f
   927     07D4  2FD2               	goto	u597
   928     07D5  2FD6               	nop2
   929     07D6  2FD7               	nop2
   930     07D7                     l944:
   931                           
   932                           ;main.c: 177:     PORTEbits.RE0 = 0;
   933     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   934     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   935     07D9  1009               	bcf	9,0	;volatile
   936     07DA                     l946:
   937                           
   938                           ;main.c: 179:     PORTC = numeros[decenas];
   939     07DA  0836               	movf	multiplexado@decenas,w
   940     07DB  00F9               	movwf	??_multiplexado
   941     07DC  0779               	addwf	??_multiplexado,w
   942     07DD  3E20               	addlw	(low (multiplexado@numeros| 0))& (0+255)
   943     07DE  0084               	movwf	4
   944     07DF  1383               	bcf	3,7	;select IRP bank0
   945     07E0  0800               	movf	0,w
   946     07E1  0087               	movwf	7	;volatile
   947     07E2                     l948:
   948                           
   949                           ;main.c: 180:     PORTEbits.RE1 = 1;
   950     07E2  1489               	bsf	9,1	;volatile
   951     07E3                     l950:
   952                           
   953                           ;main.c: 181:     _delay((unsigned long)((1)*(4000000/4000.0)));
   954     07E3  30C7               	movlw	199
   955     07E4  00F9               	movwf	??_multiplexado
   956     07E5                     u607:
   957     07E5  2FE6               	nop2
   958     07E6  0BF9               	decfsz	??_multiplexado,f
   959     07E7  2FE5               	goto	u607
   960     07E8  2FE9               	nop2
   961     07E9  2FEA               	nop2
   962     07EA                     l952:
   963                           
   964                           ;main.c: 182:     PORTEbits.RE1 = 0;
   965     07EA  1283               	bcf	3,5	;RP0=0, select bank0
   966     07EB  1303               	bcf	3,6	;RP1=0, select bank0
   967     07EC  1089               	bcf	9,1	;volatile
   968     07ED                     l92:
   969     07ED  0008               	return
   970     07EE                     __end_of_multiplexado:
   971                           
   972                           	psect	text4
   973     06C4                     __ptext4:	
   974 ;; *************** function ___awmod *****************
   975 ;; Defined at:
   976 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  divisor         2    0[COMMON] int 
   979 ;;  dividend        2    2[COMMON] int 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  sign            1    6[COMMON] unsigned char 
   982 ;;  counter         1    5[COMMON] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  2    0[COMMON] int 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         4       0       0       0       0
   993 ;;      Locals:         2       0       0       0       0
   994 ;;      Temps:          1       0       0       0       0
   995 ;;      Totals:         7       0       0       0       0
   996 ;;Total ram usage:        7 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_multiplexado
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005     06C4                     ___awmod:	
  1006                           ;psect for function ___awmod
  1007                           
  1008     06C4                     l894:	
  1009                           ;incstack = 0
  1010                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1011                           
  1012     06C4  01F6               	clrf	___awmod@sign
  1013     06C5                     l896:
  1014     06C5  1FF3               	btfss	___awmod@dividend+1,7
  1015     06C6  2EC8               	goto	u391
  1016     06C7  2EC9               	goto	u390
  1017     06C8                     u391:
  1018     06C8  2ED0               	goto	l902
  1019     06C9                     u390:
  1020     06C9                     l898:
  1021     06C9  09F2               	comf	___awmod@dividend,f
  1022     06CA  09F3               	comf	___awmod@dividend+1,f
  1023     06CB  0AF2               	incf	___awmod@dividend,f
  1024     06CC  1903               	skipnz
  1025     06CD  0AF3               	incf	___awmod@dividend+1,f
  1026     06CE                     l900:
  1027     06CE  01F6               	clrf	___awmod@sign
  1028     06CF  0AF6               	incf	___awmod@sign,f
  1029     06D0                     l902:
  1030     06D0  1FF1               	btfss	___awmod@divisor+1,7
  1031     06D1  2ED3               	goto	u401
  1032     06D2  2ED4               	goto	u400
  1033     06D3                     u401:
  1034     06D3  2ED9               	goto	l906
  1035     06D4                     u400:
  1036     06D4                     l904:
  1037     06D4  09F0               	comf	___awmod@divisor,f
  1038     06D5  09F1               	comf	___awmod@divisor+1,f
  1039     06D6  0AF0               	incf	___awmod@divisor,f
  1040     06D7  1903               	skipnz
  1041     06D8  0AF1               	incf	___awmod@divisor+1,f
  1042     06D9                     l906:
  1043     06D9  0870               	movf	___awmod@divisor,w
  1044     06DA  0471               	iorwf	___awmod@divisor+1,w
  1045     06DB  1903               	btfsc	3,2
  1046     06DC  2EDE               	goto	u411
  1047     06DD  2EDF               	goto	u410
  1048     06DE                     u411:
  1049     06DE  2F0E               	goto	l924
  1050     06DF                     u410:
  1051     06DF                     l908:
  1052     06DF  01F5               	clrf	___awmod@counter
  1053     06E0  0AF5               	incf	___awmod@counter,f
  1054     06E1  2EED               	goto	l914
  1055     06E2                     l910:
  1056     06E2  3001               	movlw	1
  1057     06E3                     u425:
  1058     06E3  1003               	clrc
  1059     06E4  0DF0               	rlf	___awmod@divisor,f
  1060     06E5  0DF1               	rlf	___awmod@divisor+1,f
  1061     06E6  3EFF               	addlw	-1
  1062     06E7  1D03               	skipz
  1063     06E8  2EE3               	goto	u425
  1064     06E9                     l912:
  1065     06E9  3001               	movlw	1
  1066     06EA  00F4               	movwf	??___awmod
  1067     06EB  0874               	movf	??___awmod,w
  1068     06EC  07F5               	addwf	___awmod@counter,f
  1069     06ED                     l914:
  1070     06ED  1FF1               	btfss	___awmod@divisor+1,7
  1071     06EE  2EF0               	goto	u431
  1072     06EF  2EF1               	goto	u430
  1073     06F0                     u431:
  1074     06F0  2EE2               	goto	l910
  1075     06F1                     u430:
  1076     06F1                     l916:
  1077     06F1  0871               	movf	___awmod@divisor+1,w
  1078     06F2  0273               	subwf	___awmod@dividend+1,w
  1079     06F3  1D03               	skipz
  1080     06F4  2EF7               	goto	u445
  1081     06F5  0870               	movf	___awmod@divisor,w
  1082     06F6  0272               	subwf	___awmod@dividend,w
  1083     06F7                     u445:
  1084     06F7  1C03               	skipc
  1085     06F8  2EFA               	goto	u441
  1086     06F9  2EFB               	goto	u440
  1087     06FA                     u441:
  1088     06FA  2F01               	goto	l920
  1089     06FB                     u440:
  1090     06FB                     l918:
  1091     06FB  0870               	movf	___awmod@divisor,w
  1092     06FC  02F2               	subwf	___awmod@dividend,f
  1093     06FD  0871               	movf	___awmod@divisor+1,w
  1094     06FE  1C03               	skipc
  1095     06FF  03F3               	decf	___awmod@dividend+1,f
  1096     0700  02F3               	subwf	___awmod@dividend+1,f
  1097     0701                     l920:
  1098     0701  3001               	movlw	1
  1099     0702                     u455:
  1100     0702  1003               	clrc
  1101     0703  0CF1               	rrf	___awmod@divisor+1,f
  1102     0704  0CF0               	rrf	___awmod@divisor,f
  1103     0705  3EFF               	addlw	-1
  1104     0706  1D03               	skipz
  1105     0707  2F02               	goto	u455
  1106     0708                     l922:
  1107     0708  3001               	movlw	1
  1108     0709  02F5               	subwf	___awmod@counter,f
  1109     070A  1D03               	btfss	3,2
  1110     070B  2F0D               	goto	u461
  1111     070C  2F0E               	goto	u460
  1112     070D                     u461:
  1113     070D  2EF1               	goto	l916
  1114     070E                     u460:
  1115     070E                     l924:
  1116     070E  0876               	movf	___awmod@sign,w
  1117     070F  1903               	btfsc	3,2
  1118     0710  2F12               	goto	u471
  1119     0711  2F13               	goto	u470
  1120     0712                     u471:
  1121     0712  2F18               	goto	l928
  1122     0713                     u470:
  1123     0713                     l926:
  1124     0713  09F2               	comf	___awmod@dividend,f
  1125     0714  09F3               	comf	___awmod@dividend+1,f
  1126     0715  0AF2               	incf	___awmod@dividend,f
  1127     0716  1903               	skipnz
  1128     0717  0AF3               	incf	___awmod@dividend+1,f
  1129     0718                     l928:
  1130     0718  0873               	movf	___awmod@dividend+1,w
  1131     0719  00F1               	movwf	?___awmod+1
  1132     071A  0872               	movf	___awmod@dividend,w
  1133     071B  00F0               	movwf	?___awmod
  1134     071C                     l344:
  1135     071C  0008               	return
  1136     071D                     __end_of___awmod:
  1137                           
  1138                           	psect	text5
  1139     071D                     __ptext5:	
  1140 ;; *************** function ___awdiv *****************
  1141 ;; Defined at:
  1142 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  divisor         2    0[COMMON] int 
  1145 ;;  dividend        2    2[COMMON] int 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  quotient        2    7[COMMON] int 
  1148 ;;  sign            1    6[COMMON] unsigned char 
  1149 ;;  counter         1    5[COMMON] unsigned char 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  2    0[COMMON] int 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, status,0
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1159 ;;      Params:         4       0       0       0       0
  1160 ;;      Locals:         4       0       0       0       0
  1161 ;;      Temps:          1       0       0       0       0
  1162 ;;      Totals:         9       0       0       0       0
  1163 ;;Total ram usage:        9 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_multiplexado
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172     071D                     ___awdiv:	
  1173                           ;psect for function ___awdiv
  1174                           
  1175     071D                     l850:	
  1176                           ;incstack = 0
  1177                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1178                           
  1179     071D  01F6               	clrf	___awdiv@sign
  1180     071E                     l852:
  1181     071E  1FF1               	btfss	___awdiv@divisor+1,7
  1182     071F  2F21               	goto	u291
  1183     0720  2F22               	goto	u290
  1184     0721                     u291:
  1185     0721  2F29               	goto	l858
  1186     0722                     u290:
  1187     0722                     l854:
  1188     0722  09F0               	comf	___awdiv@divisor,f
  1189     0723  09F1               	comf	___awdiv@divisor+1,f
  1190     0724  0AF0               	incf	___awdiv@divisor,f
  1191     0725  1903               	skipnz
  1192     0726  0AF1               	incf	___awdiv@divisor+1,f
  1193     0727                     l856:
  1194     0727  01F6               	clrf	___awdiv@sign
  1195     0728  0AF6               	incf	___awdiv@sign,f
  1196     0729                     l858:
  1197     0729  1FF3               	btfss	___awdiv@dividend+1,7
  1198     072A  2F2C               	goto	u301
  1199     072B  2F2D               	goto	u300
  1200     072C                     u301:
  1201     072C  2F36               	goto	l864
  1202     072D                     u300:
  1203     072D                     l860:
  1204     072D  09F2               	comf	___awdiv@dividend,f
  1205     072E  09F3               	comf	___awdiv@dividend+1,f
  1206     072F  0AF2               	incf	___awdiv@dividend,f
  1207     0730  1903               	skipnz
  1208     0731  0AF3               	incf	___awdiv@dividend+1,f
  1209     0732                     l862:
  1210     0732  3001               	movlw	1
  1211     0733  00F4               	movwf	??___awdiv
  1212     0734  0874               	movf	??___awdiv,w
  1213     0735  06F6               	xorwf	___awdiv@sign,f
  1214     0736                     l864:
  1215     0736  01F7               	clrf	___awdiv@quotient
  1216     0737  01F8               	clrf	___awdiv@quotient+1
  1217     0738                     l866:
  1218     0738  0870               	movf	___awdiv@divisor,w
  1219     0739  0471               	iorwf	___awdiv@divisor+1,w
  1220     073A  1903               	btfsc	3,2
  1221     073B  2F3D               	goto	u311
  1222     073C  2F3E               	goto	u310
  1223     073D                     u311:
  1224     073D  2F75               	goto	l886
  1225     073E                     u310:
  1226     073E                     l868:
  1227     073E  01F5               	clrf	___awdiv@counter
  1228     073F  0AF5               	incf	___awdiv@counter,f
  1229     0740  2F4C               	goto	l874
  1230     0741                     l870:
  1231     0741  3001               	movlw	1
  1232     0742                     u325:
  1233     0742  1003               	clrc
  1234     0743  0DF0               	rlf	___awdiv@divisor,f
  1235     0744  0DF1               	rlf	___awdiv@divisor+1,f
  1236     0745  3EFF               	addlw	-1
  1237     0746  1D03               	skipz
  1238     0747  2F42               	goto	u325
  1239     0748                     l872:
  1240     0748  3001               	movlw	1
  1241     0749  00F4               	movwf	??___awdiv
  1242     074A  0874               	movf	??___awdiv,w
  1243     074B  07F5               	addwf	___awdiv@counter,f
  1244     074C                     l874:
  1245     074C  1FF1               	btfss	___awdiv@divisor+1,7
  1246     074D  2F4F               	goto	u331
  1247     074E  2F50               	goto	u330
  1248     074F                     u331:
  1249     074F  2F41               	goto	l870
  1250     0750                     u330:
  1251     0750                     l876:
  1252     0750  3001               	movlw	1
  1253     0751                     u345:
  1254     0751  1003               	clrc
  1255     0752  0DF7               	rlf	___awdiv@quotient,f
  1256     0753  0DF8               	rlf	___awdiv@quotient+1,f
  1257     0754  3EFF               	addlw	-1
  1258     0755  1D03               	skipz
  1259     0756  2F51               	goto	u345
  1260     0757  0871               	movf	___awdiv@divisor+1,w
  1261     0758  0273               	subwf	___awdiv@dividend+1,w
  1262     0759  1D03               	skipz
  1263     075A  2F5D               	goto	u355
  1264     075B  0870               	movf	___awdiv@divisor,w
  1265     075C  0272               	subwf	___awdiv@dividend,w
  1266     075D                     u355:
  1267     075D  1C03               	skipc
  1268     075E  2F60               	goto	u351
  1269     075F  2F61               	goto	u350
  1270     0760                     u351:
  1271     0760  2F68               	goto	l882
  1272     0761                     u350:
  1273     0761                     l878:
  1274     0761  0870               	movf	___awdiv@divisor,w
  1275     0762  02F2               	subwf	___awdiv@dividend,f
  1276     0763  0871               	movf	___awdiv@divisor+1,w
  1277     0764  1C03               	skipc
  1278     0765  03F3               	decf	___awdiv@dividend+1,f
  1279     0766  02F3               	subwf	___awdiv@dividend+1,f
  1280     0767                     l880:
  1281     0767  1477               	bsf	___awdiv@quotient,0
  1282     0768                     l882:
  1283     0768  3001               	movlw	1
  1284     0769                     u365:
  1285     0769  1003               	clrc
  1286     076A  0CF1               	rrf	___awdiv@divisor+1,f
  1287     076B  0CF0               	rrf	___awdiv@divisor,f
  1288     076C  3EFF               	addlw	-1
  1289     076D  1D03               	skipz
  1290     076E  2F69               	goto	u365
  1291     076F                     l884:
  1292     076F  3001               	movlw	1
  1293     0770  02F5               	subwf	___awdiv@counter,f
  1294     0771  1D03               	btfss	3,2
  1295     0772  2F74               	goto	u371
  1296     0773  2F75               	goto	u370
  1297     0774                     u371:
  1298     0774  2F50               	goto	l876
  1299     0775                     u370:
  1300     0775                     l886:
  1301     0775  0876               	movf	___awdiv@sign,w
  1302     0776  1903               	btfsc	3,2
  1303     0777  2F79               	goto	u381
  1304     0778  2F7A               	goto	u380
  1305     0779                     u381:
  1306     0779  2F7F               	goto	l890
  1307     077A                     u380:
  1308     077A                     l888:
  1309     077A  09F7               	comf	___awdiv@quotient,f
  1310     077B  09F8               	comf	___awdiv@quotient+1,f
  1311     077C  0AF7               	incf	___awdiv@quotient,f
  1312     077D  1903               	skipnz
  1313     077E  0AF8               	incf	___awdiv@quotient+1,f
  1314     077F                     l890:
  1315     077F  0878               	movf	___awdiv@quotient+1,w
  1316     0780  00F1               	movwf	?___awdiv+1
  1317     0781  0877               	movf	___awdiv@quotient,w
  1318     0782  00F0               	movwf	?___awdiv
  1319     0783                     l331:
  1320     0783  0008               	return
  1321     0784                     __end_of___awdiv:
  1322     007E                     btemp	set	126	;btemp
  1323     007E                     wtemp0	set	126
  1324                           
  1325                           	psect	idloc
  1326                           
  1327                           ;Config register IDLOC0 @ 0x2000
  1328                           ;	unspecified, using default values
  1329     2000                     	org	8192
  1330     2000  3FFF               	dw	16383
  1331                           
  1332                           ;Config register IDLOC1 @ 0x2001
  1333                           ;	unspecified, using default values
  1334     2001                     	org	8193
  1335     2001  3FFF               	dw	16383
  1336                           
  1337                           ;Config register IDLOC2 @ 0x2002
  1338                           ;	unspecified, using default values
  1339     2002                     	org	8194
  1340     2002  3FFF               	dw	16383
  1341                           
  1342                           ;Config register IDLOC3 @ 0x2003
  1343                           ;	unspecified, using default values
  1344     2003                     	org	8195
  1345     2003  3FFF               	dw	16383
  1346                           
  1347                           	psect	config
  1348                           
  1349                           ;Config register CONFIG1 @ 0x2007
  1350                           ;	Oscillator Selection bits
  1351                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1352                           ;	Watchdog Timer Enable bit
  1353                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1354                           ;	Power-up Timer Enable bit
  1355                           ;	PWRTE = OFF, PWRT disabled
  1356                           ;	RE3/MCLR pin function select bit
  1357                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1358                           ;	Code Protection bit
  1359                           ;	CP = OFF, Program memory code protection is disabled
  1360                           ;	Data Code Protection bit
  1361                           ;	CPD = OFF, Data memory code protection is disabled
  1362                           ;	Brown Out Reset Selection bits
  1363                           ;	BOREN = OFF, BOR disabled
  1364                           ;	Internal External Switchover bit
  1365                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1366                           ;	Fail-Safe Clock Monitor Enabled bit
  1367                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1368                           ;	Low Voltage Programming Enable bit
  1369                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1370                           ;	In-Circuit Debugger Mode bit
  1371                           ;	DEBUG = 0x1, unprogramme  1372     2007                     	org	8199
  1373     2007  20D4               	dw	8404
  1374                           
  1375                           ;Config register CONFIG2 @ 0x2008
  1376                           ;	Brown-out Reset Selection bit
  1377                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1378                           ;	Flash Program Memory Self Write Enable bits
  1379                           ;	WRT = OFF, Write protection off
  1380     2008                     	org	8200
  1381     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     26      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_multiplexado
    _multiplexado->___awdiv

Critical Paths under _main in BANK0

    _main->_multiplexado

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     993
                                             24 BANK0      2     2      0
                       _multiplexado
                              _setup
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _multiplexado                                        28    28      0     993
                                              9 COMMON     4     4      0
                                              0 BANK0     24    24      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _multiplexado
     ___awdiv
     ___awmod
   _setup
   _setupADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 16 21:06:34 2022

                      pc 0002                       l70 0699                       l63 0686  
                     l72 069D                       l74 06B3                       l67 0692  
                     l92 07ED                       l84 0675                       l77 06BF  
                     l87 0658             ___awdiv@sign 0076                       fsr 0004  
                    l331 0783                      l344 071C                      l900 06CE  
                    l910 06E2                      l902 06D0                      l920 0701  
                    l912 06E9                      l904 06D4                      l850 071D  
                    l922 0708                      l914 06ED                      l906 06D9  
                    l770 0661                      l860 072D                      l852 071E  
                    l916 06F1                      l908 06DF                      l924 070E  
                    l940 07CF                      l932 0784                      l780 0666  
                    l772 0662                      l870 0741                      l862 0732  
                    l854 0722                      l926 0713                      l918 06FB  
                    l950 07E3                      l942 07D0                      l934 0799  
                    l790 066D                      l782 0667                      l774 0663  
                    l766 0659                      l880 0767                      l872 0748  
                    l864 0736                      l856 0727                      l928 0718  
                    l952 07EA                      l944 07D7                      l936 07B1  
                    l792 066E                      l784 0668                      l776 0664  
                    l768 065D                      l960 068A                      l890 077F  
                    l882 0768                      l874 074C                      l866 0738  
                    l858 0729                      l946 07DA                      l938 07C7  
                    l794 0674                      l786 066B                      l778 0665  
                    l970 069E                      l962 068E                      l954 0676  
                    l884 076F                      l876 0750                      l868 073E  
                    l948 07E2                      l788 066C                      l796 063E  
                    l980 06BD                      l972 06A3                      l956 0680  
                    l878 0761                      l886 0775                      l894 06C4  
                    l798 0654                      l974 06AD                      l966 0696  
                    l888 077A                      l896 06C5                      l968 0698  
                    l898 06C9                      l978 06B7                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      u300 072D  
                    u301 072C                      u310 073E                      u311 073D  
                    u400 06D4                      u401 06D3                      u330 0750  
                    u410 06DF                      u331 074F                      u411 06DE  
                    u500 068A                      u325 0742                      u501 0689  
                    u350 0761                      u430 06F1                      u510 0692  
                    u351 0760                      u431 06F0                      u511 0691  
                    u440 06FB                      u520 0696                      u345 0751  
                    u441 06FA                      u425 06E3                      u521 0695  
                    u370 0775                      u290 0722                      u530 069D  
                    u371 0774                      u355 075D                      u291 0721  
                    u531 069C                      u380 077A                      u460 070E  
                    u540 06B3                      u381 0779                      u365 0769  
                    u461 070D                      u445 06F7                      u541 06B2  
                    u470 0713                      u390 06C9                      u550 06B7  
                    u471 0712                      u455 0702                      u391 06C8  
                    u607 07E5                      u551 06B6                      u480 078C  
                    u560 06BD                      u561 06BC                      u490 0686  
                    u491 0685                      u577 06A9                      u587 0656  
                    u597 07D2                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076                     _ADIF 0066                     _main 0676  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awdiv 0784          __end_of___awmod 071D                    _ANSEL 0188  
        ___awdiv@divisor 0070          ___awdiv@counter 0075                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0659                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 06C4                   ??_main 0038                   _ADRESH 001E  
       ___awdiv@dividend 0072                   ?_setup 0070                   _ANSELH 0189  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075         __end_of_setupADC 0659  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 062A  
          __end_of_setup 0676           _OPTION_REGbits 0081                  ??_setup 0070  
             __pmaintext 0676                ?_setupADC 0070                  ___awdiv 071D  
                ___awmod 06C4                _ANSELbits 0188                  __ptext1 063E  
                __ptext2 0659                  __ptext3 0784                  __ptext4 06C4  
                __ptext5 071D         ___awmod@dividend 0072      multiplexado@decenas 0036  
   end_of_initialization 07FC      multiplexado@numeros 0020               ??_setupADC 0070  
              _PORTBbits 0006                _PORTEbits 0009            ?_multiplexado 0070  
              _TRISAbits 0085           ??_multiplexado 0079      start_initialization 07EE  
             init_fetch0 0617              __pdataBANK0 003A                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0070  
   __end_of_multiplexado 07EE               _ADCON0bits 001F               _ADCON1bits 009F  
               _WPUBbits 0095        multiplexado@F1301 003A                 _setupADC 063E  
               init_ram0 061B     multiplexado@unidades 0034               _OSCCONbits 008F  
           _multiplexado 0784  
